version: '3.8'

services:
  db:
    image: postgres:14
    environment:
      POSTGRES_DB: clientnest
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backend:/app
      - ./ai_services:/app/ai_services
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:password@db:5432/clientnest
      - REDIS_URL=redis://redis:6379/1
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}
      - DEEPSEEK_API_BASE_URL=${DEEPSEEK_API_BASE_URL}
      - DEEPSEEK_API_VERSION=${DEEPSEEK_API_VERSION}
      - DJANGO_SECRET_KEY=${SECRET_KEY}
    depends_on:
      - db
      - redis

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A mukiisa_backend worker -l info
    volumes:
      - ./backend:/app
      - ./ai_services:/app/ai_services
    environment:
      - DATABASE_URL=postgresql://postgres:password@db:5432/clientnest
      - REDIS_URL=redis://redis:6379/1
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}
      - DEEPSEEK_API_BASE_URL=${DEEPSEEK_API_BASE_URL}
      - DEEPSEEK_API_VERSION=${DEEPSEEK_API_VERSION}
      - DJANGO_SECRET_KEY=${SECRET_KEY}
    depends_on:
      - db
      - redis

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A mukiisa_backend beat -l info
    volumes:
      - ./backend:/app
      - ./ai_services:/app/ai_services
    environment:
      - DATABASE_URL=postgresql://postgres:password@db:5432/clientnest
      - REDIS_URL=redis://redis:6379/1
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}
      - DEEPSEEK_API_BASE_URL=${DEEPSEEK_API_BASE_URL}
      - DEEPSEEK_API_VERSION=${DEEPSEEK_API_VERSION}
      - DJANGO_SECRET_KEY=${SECRET_KEY}
    depends_on:
      - db
      - redis

volumes:
  postgres_data: 