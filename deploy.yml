name: Auto Deploy to AWS CloudFormation

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: windows-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ arn:aws:iam::763338915451:role/GitHubOIDCDeployRole }}
          aws-region: ${{ af-south-1 }}

      - name: Install AWS CLI (if not already)
        run: |
          if (-not (Get-Command aws -ErrorAction SilentlyContinue)) {
            Invoke-WebRequest -Uri "https://awscli.amazonaws.com/AWSCLIV2.msi" -OutFile "AWSCLIV2.msi"
            Start-Process msiexec.exe -Wait -ArgumentList '/i AWSCLIV2.msi /quiet'
          }
          aws --version
        shell: pwsh

      - name: Validate CloudFormation Template
        run: |
          aws cloudformation validate-template --template-body file://clientnest-vpc.yaml
        shell: pwsh

      - name: Deploy CloudFormation Stack
        run: |
          $stackName = "nest"
          aws cloudformation deploy `
            --template-file clientnest-vpc.yaml `
            --stack-name $stackName `
            --capabilities CAPABILITY_NAMED_IAM `
            --no-fail-on-empty-changeset
        shell: pwsh
        - name: Set up Python
  uses: actions/setup-python@v5
  with:
    python-version: '3.11'

- name: Install Dependencies
  run: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt

- name: Run Django Migrations (optional)
  run: |
    python manage.py migrate

- name: Run Tests
  run: |
    pytest

- name: Run Linter
  run: |
    flake8 .

